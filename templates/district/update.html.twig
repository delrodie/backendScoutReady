{% extends 'base.html.twig' %}
{% block extra_title %} Nouveau district {% endblock %}
{% block body %}
    <div id="mainContent" class="main-content expanded">
        <div class="content">
            <div class="row">
                <div class="col-md-10 col-lg-8 col-xl-6 offset-md-1 offset-lg-2 offset-xl-3">
                    <h4 class="content-label">Gestion des districts</h4>
                    <hr>
                    <div class="d-flex justify-content-between align-items-center mt-3 mb-3">
                        <h6 class="content-title">Formulaire</h6>
                        <a href="{{ absolute_url(path('app_district_list')) }}" class="btn btn-blue"><span class="icon liste">Liste</span> </a>
                    </div>

                    <div class="card mt-5">
                        <div class="card-body">
                            <form action="{{ absolute_url(path('app_district_update',{id: district.id})) }}" method="post" class="formulaire g-3 needs-validation" id="api_region_form" novalidate>
                                <div class="row form-group">
                                    <div class="col-12 mt-3">
                                        <label for="selectRegion" class="form-label">Région</label>
                                        <select name="district_region" id="selectRegion" class="form-select js-choice">
                                            <option value="{{ district.region['id'] }}">{{ district.region['nom'] }}</option>
                                            {% for region in regions %}
                                                <option value="{{ region.id }}">{{ region.asn['sigle']|raw }} - {{ region.nom }}</option>
                                            {% endfor %}
                                        </select>
                                    </div>
                                    <div class="col-12 mt-3">
                                        <label for="inputNom" class="form-label">Nom du district</label>
                                        <input type="text" id="inputNom" name="district_nom" class="form-control" value="{{ district.nom }}" autocomplete="off" required>
                                        <div class="invalid-feedback">Le nom est obligatoire</div>
                                    </div>
                                    <div class="col-12 mt-5 text-end">
                                        <input type="hidden" name="_districtCsrfToken" value="{{ csrf_token('districtAdd') }}">
                                        {#                                        <button class="btn btn-red btn-sm"><span class="icon supprimer">Supprimer</span> </button>#}
                                        <a href="{{ absolute_url(path('app_district_list')) }}" class="btn btn-transparent btn-sm"><span class="icon annuler">Annuler</span></a>
                                        <button class="btn btn-blue btn-sm"> <span class="icon ajouter">Ajouter</span> </button>
                                    </div>
                                </div>
                            </form>
                            {{ include('district/_delete.html.twig') }}
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>
{% endblock %}

{% block extra_stylesheets %}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css" />
{% endblock %}

{% block extra_javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>
    <script>
        (() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const element = document.querySelector(".js-choice");
            new Choices(element, {
                removeItemButton: true,
                searchEnabled: true,
                loadingText: 'Chargement...',
                noResultsText: 'Aucun résultat',
                noChoicesText: 'Pas de choix à faire',
                itemSelectText: 'Cliquez pour selectionner',
                classNames:{
                    focusState: 'color: red',
                }
            });
            console.log('choices.js')
        });

    </script>
{% endblock %}

